

name: Build release Docker image

on:
  # Trigger the action manually from the UI
  workflow_dispatch:
  # Trigger the action when I create or push a `release/**` branch
  push:
    branches:
      - 'release/**'

env:
  DOCKER_IMAGE_NAME_SERVER: mikrotik-backup-server
  DOCKER_IMAGE_NAME_FRONT: mikrotik-backup-front
  REGISTRY: ghcr.io

jobs:
  build_docker_images:
    # Job name that shows in the GitHub UI
    name: Build Docker Images
    # Runner to use
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get the release version
      # i.e.: release/1.0.0 -> 1.0.0
      id: strip-branch-name
      run: |
        release_version=$(echo "${{ github.ref }}" | sed 's/refs\/heads\/.*\///')
        echo "Building release version $release_version"
        echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
        shell: bash
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the Docker image for Server
      run: cd server && docker buildx build --push --platform linux/amd64,linux/arm64/v8 -t REGISTRY/$DOCKER_IMAGE_NAME_SERVER:$RELEASE_VERSION
 
    - name: Build the Docker image for Front
      run: cd client && docker buildx build --push --platform linux/amd64,linux/arm64/v8 -t REGISTRY/$DOCKER_IMAGE_NAME_FRONT:$RELEASE_VERSION
